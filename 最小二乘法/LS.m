close all; clear; clc;
% Functionality：
% 最小二乘法 LS 实例
% 
% 最小二乘法的局限性和适用场景：
%{
    优：最小二乘法适用简洁高效，比梯度下降等迭代法更加方便。
    缺：
    1、需要计算矩阵 X'X 的逆矩阵，若矩阵非奇异，则不可以计算逆矩阵。
    解决方法：岭回归、对样本数据进行整理，去掉冗余特征等。
    2、当样本特征n非常大的时候，计算 X'X的逆矩阵较为耗时。(建议超过10000个特征值就用迭代法)
    解决方法：采用主成分分析降低特征的维度后采用最小二乘法、采用RLS(递归最小二乘法)等。
    3、如果拟合函数不是线性的，此时无法使用最小二乘法，此时需要特殊技巧将其转换为线性才可以继续使用
%}
% 遇到矩阵不可逆时的解决方案：
%{
    1、求解伪逆；
    2、矩阵不可逆表示某些特征值之间存在线性相关特性，即存在冗余数据，应该删除一些线性相关的特征。(PCA算法)
    PCA算法(Principal components analysis)--主成分分析（最主要的降维方法之一）
    3、当特征值个数远远多于训练样本集个数时（约束条件不够），可以删去一些不重要的信息进行正规化处理。
%}
% 最后修改时间2022.11.19
%==============================================================Author：Chen
T = 1; B = 5; fs = 50*B; N = round(T*fs);
model_n = 50;% 假设有在50个训练模型

% 输入矩阵初始化
X = zeros(model_n,N);
% 观测值样本矩阵初始化
Y = zeros(model_n,N);

for i =1:model_n
    % 产生随机误差
    random_error = 0.1*rand(1,N);
    X(i,:) = linspace(0,T,N);
    % 使用 cos() 函数做参考实例
    Y(i,:) = cos(2*pi*B*X(i,:)) + random_error; % 每个模型时间向后延迟0.05s
end
%% 最小二乘法
if det(X'*X) ~= 0 % 矩阵非奇异时，可以使用最小二乘法
    Theta = (X'*X)\X'*Y;
    fprintf('矩阵非奇异，采用最小二乘法')
else              % 奇异矩阵，不能直接使用最小二乘法
    %=============================================== method 1：岭回归(L2正则化)模型
    % 岭回归是构建多重线性回归模型时，对基于"最小二乘原理"推导出的估计回归系数的计算公式做一下校正，使回归系数更加稳定
    lambda = 0.98;  % lambda = 0时，岭回归惩罚项为0，与最小二乘法结果一致。
    Theta = (X'*X + lambda*eye(N))\X'*Y;
    fprintf('奇异矩阵，采用岭回归模型')
end
%% 图像绘制
% 样本点绘制
figure(NumberTitle="off",Name="样本点图像")
for i = 1:model_n
    scatter(X(i,:),real(Y(i,:)));hold on;
end

% 绘制最小二乘法拟合图像
t = linspace(0,T,N);% 坐标轴初始化
H_theta = t*Theta;  % 得到最小二乘法拟合点
figure(NumberTitle="off",Name="最小二乘法")
plot(t,real(H_theta));







